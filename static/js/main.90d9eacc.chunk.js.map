{"version":3,"sources":["App.js","index.js"],"names":["App","useState","ScreenSpinner","size","popout","setPopout","link","setLink","useEffect","links","window","location","hash","slice","length","split","console","log","View","activePanel","id","onClick","bridge","sendPromise","ad_format","send","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","ReactDOM","render","getElementById"],"mappings":"yNAyCeA,EAjCH,WAAO,IAAD,EACWC,mBAAS,cAACC,EAAA,EAAD,CAAeC,KAAK,WADxC,mBACVC,EADU,KACFC,EADE,OAEKJ,mBAAS,MAFd,mBAEZK,EAFY,KAENC,EAFM,KAajB,OATAC,qBAAU,WACTH,EAAU,MACV,IACII,EADOC,OAAOC,SAASC,KAAKC,MAAM,EAAGH,OAAOC,SAASC,KAAKE,QAC7CC,MAAM,KACvBR,EAAQE,GACRO,QAAQC,IAAIR,KACV,IAIF,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAACS,EAAA,EAAD,CAAMC,YAAY,OAAOf,OAAQA,EAAjC,SACC,eAAC,IAAD,CAAOgB,GAAG,OAAV,UACC,cAAC,IAAD,+BACA,cAAC,IAAD,CAAQC,QAAS,WAChBC,IAAOC,YAAY,wBAAyB,CAAEC,UAAW,iBACzDF,IAAOG,KAAK,uBACZ,CACC,IAAOnB,EACP,SAAY,eALd,kECrBNgB,IAAOG,KAAK,gBACZH,IAAOI,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KAClC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAI1CQ,IAASC,OAAO,cAAC,EAAD,IAASR,SAASS,eAAe,W","file":"static/js/main.90d9eacc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot, Button, Panel, PanelHeader } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\n\nconst App = () => {\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tlet [link, setLink] = useState(null);\n\n\tuseEffect(() => {\n\t\tsetPopout(null)\n\t\tlet hash = window.location.hash.slice(1, window.location.hash.length)\n\t\tlet links = hash.split('&')\n\t\tsetLink(links)\n\t\tconsole.log(links);\n\t}, []);\n\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel='home' popout={popout}>\n\t\t\t\t\t<Panel id='home'>\n\t\t\t\t\t\t<PanelHeader>Voice Downloader</PanelHeader>\n\t\t\t\t\t\t<Button onClick={() => {\n\t\t\t\t\t\t\tbridge.sendPromise('VKWebAppShowNativeAds', { ad_format: 'interstitial' })\n\t\t\t\t\t\t\tbridge.send(\"VKWebAppDownloadFile\", \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"url\": link, \n\t\t\t\t\t\t\t\t\"filename\": \"voice.mp3\"});\n\t\t\t\t\t\t}}>Скачать</Button>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nbridge.subscribe(({ detail: { type, data }}) => {\n  if (type === 'VKWebAppUpdateConfig') {\n    const schemeAttribute = document.createAttribute('scheme');\n    schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n    document.body.attributes.setNamedItem(schemeAttribute);\n  }\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}